---
# tasks file for provisioning_instances
- name: Create security group
  ec2_group:
          name: "multi-node-cluster"
          description: "Security group for k8s multinode cluster"
          region: ap-south-1
          vpc_id: vpc-ee967485
          aws_access_key: "{{ access_key }}"
          aws_secret_key: "{{ secret_key }}"
          rules:
                  - proto: all
                    cidr_ip: 0.0.0.0/0
  register: result_sec_group

- name: Launching Slave-1
  ec2_instance:
          aws_access_key: "{{ access_key }}"
          aws_secret_key: "{{ secret_key }}"
          region: "ap-south-1"
          name: "slave1"
          tags:
                  group: slave1
          instance_type: "t2.micro"
          wait: yes
          wait_timeout: 20
          key_name: arth-hadoop-master
          image_id: ami-08e0ca9924195beba
          security_group: "{{ result_sec_group.group_id }}"
          state: present
          vpc_subnet_id: subnet-76a4dd3a
  register: slave1

- name: Launching Slave-2
  ec2_instance:
          aws_access_key: "{{ access_key }}"
          aws_secret_key: "{{ secret_key }}"
          region: "ap-south-1"
          name: "slave2"
          tags:
                  group: slave2
          instance_type: "t2.micro"
          wait: yes
          wait_timeout: 20
          key_name: arth-hadoop-master
          image_id: ami-08e0ca9924195beba
          security_group: "{{ result_sec_group.group_id }}"
          state: present
          vpc_subnet_id: subnet-76a4dd3a
  register: slave2

- name: Launching Master
  ec2_instance:
          aws_access_key: "{{ access_key }}"
          aws_secret_key: "{{ secret_key }}"
          region: "ap-south-1"
          name: "master"
          tags:
                  group: master
          instance_type: "t2.micro"
          wait: yes
          wait_timeout: 20
          key_name: arth-hadoop-master
          image_id: ami-08e0ca9924195beba
          security_group: "{{ result_sec_group.group_id }}"
          state: present
          vpc_subnet_id: subnet-76a4dd3a
  register: master

- name: Adding hosts to inventory with pem path
  blockinfile:
          dest: "{{ inv_path }}"
          marker: ""
          create: yes
          block: |
                           [master]
                           {{ master.instances[0].public_ip_address }} ansible_user=ec2-user ansible_ssh_private_key_file="{{ key_path }}" ansible_connection=ssh
                           [slaves]
                           {{ slave1.instances[0].public_ip_address }} ansible_user=ec2-user ansible_ssh_private_key_file="{{ key_path }}" ansible_connection=ssh
                           {{ slave2.instances[0].public_ip_address }} ansible_user=ec2-user ansible_ssh_private_key_file="{{ key_path }}" ansible_connection=ssh

- name: Refreshing Inventry
  meta: refresh_inventory

- name: Please wait for the instances
  pause:
    minutes: 1

